@use "sass:math";

$grid-columns: 12;
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}
$gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);

//for gap beetween the grid element
@each $g, $v in $gaps {
  .gap-#{$g} > * {
    padding: $v;
  }
  .gap-#{$g} {
    margin-left: -$v;
    margin-right: -$v;
  }
}
//for justify-content of grid
$justify-contents: flex-start, flex-end, center, space-between, space-around,
  space-evenly;
@each $justify-val in $justify-contents {
  .justify-#{$justify-val} {
    justify-content: $justify-val;
  }
}
//for xs
@include xs {
  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

//for sm
@include sm {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
//for md
@include md {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

//for lg
@include lg {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

//for xl
@include xl {
  @for $i from 1 through $grid-columns {
    .col-xl-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
